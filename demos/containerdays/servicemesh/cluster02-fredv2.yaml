---
apiVersion: v1
kind: Service
metadata:
  name: fredv2
  namespace: fred
  labels:
    app.kubernetes.io/name: fredv2
  annotations:
     service.cilium.io/global: "true"
     service.cilium.io/affinity: "local"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fredv2
---
apiVersion: v1
kind: Service
metadata:
  name: fredv2-api
  namespace: fred
  labels:
    app.kubernetes.io/name: fredv2-api
  annotations:
     service.cilium.io/global: "true"
     service.cilium.io/affinity: "local"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fredv2-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fredv2
  namespace: fred
  labels:
    app.kubernetes.io/name: fredv2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fredv2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fredv2
    spec:
      securityContext:
        {}
      containers:
        - name: fredv2
          env:
            - name: TextUrl
              valueFrom:
                configMapKeyRef:
                  name: fredv2-response
                  key: TextUrl
          securityContext:
            {}
          image: "ghcr.io/whiteducksoftware/sample-mvc:fred-pirate"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fredv2-api
  namespace: fred
  labels:
    app.kubernetes.io/name: fredv2-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fredv2-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fredv2-api
    spec:
      securityContext:
        {}
      containers:
        - name: fredv2-api
          env:
            - name: Value
              valueFrom:
                configMapKeyRef:
                  name: fredv2-api
                  key: Value
          securityContext:
            {}
          image: "ghcr.io/whiteducksoftware/sample-api:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/fredtext
              port: http
          readinessProbe:
            httpGet:
              path: /api/fredtext
              port: http
          resources:
            {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fredv2-response
  namespace: fred
data:
  TextUrl: "http://fredv2-api.fred.svc.cluster.local:8080/api/fredtext"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fredv2-api
  namespace: fred
data:
  Value: "Hi folks - this is a new feature on Cluster 02!"
